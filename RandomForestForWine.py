# -*- coding: utf-8 -*-
"""Random Forest Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uqbP6P52GFUZc5HS_3zQ34tQQhowmEC0
"""

from sklearn.datasets import load_wine
data=load_wine()
data

import pandas as pd
df_wine=pd.DataFrame(data=data['data'],columns=data['feature_names'])
df_wine['wine_type']=data['target']
df_wine.head(10)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(data['data'],data['target'],test_size=0.20,random_state=1)

print("X_train shape",x_train.shape)
print("X_test shape",x_test.shape)
print("Y_train shape",y_train.shape)
print("Y_test shape",y_test.shape)

from sklearn.ensemble import  RandomForestClassifier
model=RandomForestClassifier()
model

model.fit(x_train,y_train)

pv=model.predict(x_test)
from sklearn.metrics import accuracy_score
ac=accuracy_score(y_test,pv)
print("Accuracy is : ",ac)

winetype=model.predict([[45.32,12.23,20.24,104.45,23.34,1.23,3.12,1.1,6.4,10.1,4.5,8.3,8000]])
print(winetype)

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test,pv)
print(cm)

import seaborn as sns
sns.heatmap(cm,annot=True,cmap='cool',linewidths=0.5,yticklabels=['class_0', 'class_1', 'class_2'],xticklabels=['pv_class_0', 'pv_class_1', 'pv_class_2'])

fi=pd.Series(model.feature_importances_)
index=fi.index
print(fi)
print(index)
import matplotlib.pyplot as plt
plt.figure(figsize=(30,8))
plt.bar(data['feature_names'],fi)

print(data['feature_names'])

df_wine_final=pd.DataFrame({'alcohol':df_wine['alcohol'],
                            'alcalinity_of_ash':df_wine['alcalinity_of_ash'],
                            'magnesium':df_wine['magnesium'],
                            'total_phenols':df_wine['total_phenols'],
                            'flavanoids':df_wine['flavanoids'],
                            'color_intensity':df_wine['color_intensity'],
                            'hue':df_wine['hue'],
                            'od280/od315_of_diluted_wines':df_wine['od280/od315_of_diluted_wines'],
                            'proline':df_wine['proline'],
                            'wine_type':df_wine['wine_type']})
df_wine_final.head()

x=df_wine_final.iloc[:,0:9]
print(x)
y=df_wine_final.iloc[:,9]
print(y)

xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=.20,random_state=1)

model=RandomForestClassifier()
model.fit(xtrain,ytrain)
pv=model.predict(xtest)
ac1=accuracy_score(ytest,pv)
print(ac1)

acv=[ac,ac1]
aci=['accuracy','final_accuracy']
plt.bar(aci,acv)

